//LOAD "core.types"
LOAD "testlib"
LOAD "core.macros"
//LOAD "core.eu"
//LOAD "test2"

// Types Declarations
TYPE data4 EXTENDS() ATTRIBUTES() ACTIONS()
TYPE none EXTENDS() ATTRIBUTES() ACTIONS()
TYPE data EXTENDS() ATTRIBUTES() ACTIONS()
TYPE agent EXTENDS() ATTRIBUTES() ACTIONS()

// Agents Declarations
AGENT foo TYPES(DataController) REQUIRED(a) PROVIDED(p)
AGENT bar TYPES(none) REQUIRED(a) PROVIDED(p)
AGENT alice TYPES(DataSubject) REQUIRED() PROVIDED()
AGENT cloudS TYPES(DataController) REQUIRED() PROVIDED()
AGENT exbackup TYPES() REQUIRED() PROVIDED()
AGENT DPA TYPES(Auditor) REQUIRED() PROVIDED()
DATA d TYPES(data) SUBJECT alice
DATA d2 TYPES(data) SUBJECT bobo
// Service Declarations
SERVICE a TYPES() PURPOSE()
SERVICE p TYPES() PURPOSE()
SERVICE read TYPES() PURPOSE()
SERVICE write TYPES() PURPOSE()
SERVICE delete TYPES() PURPOSE()
SERVICE get TYPES() PURPOSE()
SERVICE store TYPES() PURPOSE()
SERVICE notify TYPES() PURPOSE()
SERVICE audit TYPES() PURPOSE()
SERVICE sanction TYPES() PURPOSE()
SERVICE audit TYPES() PURPOSE()

CLAUSE c1 (
    FORALL file:data WHERE file.subject==alice
    EXISTS a:agent
//    ALWAYS(
    PERMIT alice.read[cloudS](d)
    AND PERMIT alice.write[cloudS](file)
    AND PERMIT alice.delete[cloudS](file)
    AND PERMIT cloudS.get[a](file)
    AND DENY cloudS.store[exbackup](file)
    AND DENY cloudS.store[a](file)
    AND IF (alice.read[cloudS](file)) THEN (MUST(cloudS.notify[cloudS]()))
//    )
    AUDITING DPA.audit[cloudS]()
    IF_VIOLATED_THEN MUST(DPA.sanction[cloudS]() AND cloudS.delete[file]())
)

// HINT 1 : Action auto complete

CLAUSE c2(
    FORALL a:agent FORALL file:data //WHERE file.subject==a
    PERMIT a.read[cloudS](file)
    AND PERMIT a.write[cloudS](file)
    AND DENY a.delete[cloudS](file)
//    AND PERMIT a.delete[cloudS](file)
    AND PERMIT cloudS.get[a](file)
    AND PERMIT cloudS.store[exbackup](file)
//    AND DENY cloudS.store[exbackup](file)
//    AND IF (a.read[cloudS](file)) THEN (MUST(cloudS.notify[cloudS]()))
    AUDITING DPA.audit[cloudS]()
    IF_VIOLATED_THEN DPA.sanction[cloudS]()
)


//CALL show_libs()
//CALL resolve("self.clause('c1')" "self.clause('c2')")
//CALL show_clause("'c1'")
CALL validate("'c1'" "'c2'")
//CALL obligation6()
CALL to_natural("'c1'")


EXEC
"""
for x in self.aalprog.walk(filters="self.is_a('DataController')", filter_type=m_agent):
    print(x.name)
print('coucouuuuuuuu')
"""