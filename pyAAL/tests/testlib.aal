
MACRO test (
"""
//print(self.libs[0].aalprog)
//for x in self.aalprog.clauses:
//   print(x)
//check_monodic(self.aalprog, verbose=True)
print("\n\n-- macro start ...\n")
//e = m_modal.T_mustnot
//print(e.to_ltl())
r = self.aalprog.clauses[0].usage.to_ltl()
print(r)
//with open("tools/demo.tspass", mode='w+') as f:
//    f.write(r)
//tspassc("tools/demo.tspass")
print("\n-- macro end ...\n\n")
//print(self.clause("alicePref").usage)
//m = m_ltlCheck(name="tmp", code="clause(c1).uc => clause(c2).uc")
//self.apply_check(code="clause(c1).uc => clause(c2).uc")

"""
)

//CHECK toto ( clause(c1).uc => clause(c2).uc )
//CHECK toto1 ( clause(c2).uc => clause(c1).uc )
//CHECK toto2 ( clause(c1).uc & clause(c2).uc )
//CHECK toto3 ( ~(clause(c1).uc & clause(c2).uc ))
