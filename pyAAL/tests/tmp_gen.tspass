
  ~(
%%%%%%%%% START EVN %%%%%%%%%%%
%%% Types knowledge
data(CTS)  & Actor(CTS)  & DataSubject(CTS)  & DataController(CTS)  & DataProcessor(CTS)  & DwDataController(CTS)  & Auditor(CTS)  & CloudProvider(CTS)  & CloudCustomer(CTS)  & EndUser(CTS)  & sensitive(CTS) & (![x] ( (sensitive(CTS) => data(CTS) ) )) & public(CTS) & (![x] ( (public(CTS) => data(CTS) ) )) & username(CTS) & (![x] ( (username(CTS) => sensitive(CTS) ) )) & password(CTS) & (![x] ( (password(CTS) => sensitive(CTS) ) )) & userId(CTS) & (![x] ( (userId(CTS) => sensitive(CTS) ) )) & displayName(CTS) & (![x] ( (displayName(CTS) => public(CTS) ) )) & gender(CTS) & (![x] ( (gender(CTS) => public(CTS) ) )) & age(CTS) & (![x] ( (age(CTS) => public(CTS) ) )) & height(CTS) & (![x] ( (height(CTS) => sensitive(CTS) ) )) & weight(CTS) & (![x] ( (weight(CTS) => sensitive(CTS) ) )) & sugarLevel(CTS) & (![x] ( (sugarLevel(CTS) => sensitive(CTS) ) )) & blood(CTS) & (![x] ( (blood(CTS) => sensitive(CTS) ) )) & heartbeat(CTS) & (![x] ( (heartbeat(CTS) => sensitive(CTS) ) )) & activity(CTS) & (![x] ( (activity(CTS) => sensitive(CTS) ) )) & wellbeing(CTS) & (![x] ( (wellbeing(CTS) => sensitive(CTS) ) )) & country(CTS) & (![x] ( (country(CTS) => public(CTS) ) )) & DataSubject(CTS)  & DataController(CTS)  & DataProcessor(CTS)  & WCOemployee(CTS) & (![x] ( (WCOemployee(CTS) => DataController(CTS) ) )) & WCOAdmin(CTS) & (![x] ( (WCOAdmin(CTS) => WCOemployee(CTS) ) )) & WDevice(CTS) & (![x] ( (WDevice(CTS) => DataController(CTS) ) )) & Customer(CTS) & (![x] ( (Customer(CTS) => DataSubject(CTS) ) )) & 

%%% Action authorizations 
(![x, y, z] (read(x, y, z) => Pread(x, y, z))) & (![x, y, z] (write(x, y, z) => Pwrite(x, y, z))) & (![x, y, z] (audit(x, y, z) => Paudit(x, y, z))) & (![x, y, z] (createCustomerProfile(x, y, z) => PcreateCustomerProfile(x, y, z))) & (![x, y, z] (createBusinessProfile(x, y, z) => PcreateBusinessProfile(x, y, z))) & (![x, y, z] (login(x, y, z) => Plogin(x, y, z))) & (![x, y, z] (add(x, y, z) => Padd(x, y, z))) & (![x, y, z] (edit(x, y, z) => Pedit(x, y, z))) & (![x, y, z] (update(x, y, z) => Pupdate(x, y, z))) & (![x, y, z] (delete(x, y, z) => Pdelete(x, y, z))) & (![x, y, z] (submitRTI(x, y, z) => PsubmitRTI(x, y, z))) & (![x, y, z] (requestRTI(x, y, z) => PrequestRTI(x, y, z))) & (![x, y, z] (updateWellbeing(x, y, z) => PupdateWellbeing(x, y, z))) & (![x, y, z] (getWellbeingTraining(x, y, z) => PgetWellbeingTraining(x, y, z))) & (![x, y, z] (getWellbeingScore(x, y, z) => PgetWellbeingScore(x, y, z))) & (![x, y, z] (manageBusinessFormula(x, y, z) => PmanageBusinessFormula(x, y, z))) & (![x, y, z] (updateThresholds(x, y, z) => PupdateThresholds(x, y, z))) & (![x, y, z] (viewActiveUsers(x, y, z) => PviewActiveUsers(x, y, z))) & (![x, y, z] (requestStat(x, y, z) => PrequestStat(x, y, z))) & (![x, y, z] (requestDataCompliance(x, y, z) => PrequestDataCompliance(x, y, z))) & (![x, y, z] (requestDataPath(x, y, z) => PrequestDataPath(x, y, z))) & (![x, y, z] (receiveAlerts(x, y, z) => PreceiveAlerts(x, y, z))) & (![x, y, z] (receivePVA(x, y, z) => PreceivePVA(x, y, z))) & (![x, y, z] (receiveTVA(x, y, z) => PreceiveTVA(x, y, z))) & (![x, y, z] (receiveBreachNotif(x, y, z) => PreceiveBreachNotif(x, y, z))) & (![x, y, z] (createCustomerProfile(x, y, z) => PcreateCustomerProfile(x, y, z))) & (![x, y, z] (login(x, y, z) => Plogin(x, y, z))) & (![x, y, z] (add(x, y, z) => Padd(x, y, z))) & (![x, y, z] (edit(x, y, z) => Pedit(x, y, z))) & (![x, y, z] (update(x, y, z) => Pupdate(x, y, z))) & (![x, y, z] (delete(x, y, z) => Pdelete(x, y, z))) & (![x, y, z] (submitRTI(x, y, z) => PsubmitRTI(x, y, z))) & (![x, y, z] (requestRTI(x, y, z) => PrequestRTI(x, y, z))) & (![x, y, z] (updateWellbeing(x, y, z) => PupdateWellbeing(x, y, z))) & (![x, y, z] (getWellbeingTraining(x, y, z) => PgetWellbeingTraining(x, y, z))) & (![x, y, z] (getWellbeingScore(x, y, z) => PgetWellbeingScore(x, y, z))) & (![x, y, z] (requestStat(x, y, z) => PrequestStat(x, y, z))) & (![x, y, z] (requestDataPath(x, y, z) => PrequestDataPath(x, y, z))) & (![x, y, z] (receiveAlerts(x, y, z) => PreceiveAlerts(x, y, z))) & (![x, y, z] (receivePVA(x, y, z) => PreceivePVA(x, y, z))) & (![x, y, z] (receiveBreachNotif(x, y, z) => PreceiveBreachNotif(x, y, z))) & (![x, y, z] (createBusinessProfile(x, y, z) => PcreateBusinessProfile(x, y, z))) & (![x, y, z] (manageBusinessFormula(x, y, z) => PmanageBusinessFormula(x, y, z))) & (![x, y, z] (updateThresholds(x, y, z) => PupdateThresholds(x, y, z))) & (![x, y, z] (viewActiveUsers(x, y, z) => PviewActiveUsers(x, y, z))) & (![x, y, z] (requestDataCompliance(x, y, z) => PrequestDataCompliance(x, y, z))) & 

%%% Actors knowledge 
Actor(auditor) & Actor(PO) & Customer(kim)  & DataSubject(customer2)  & DataController(wearableCo)  & DataProcessor(cardioMon)  & DataProcessor(mapOnWeb)  & DataProcessor(dataSpacer)  & 
%%%%%%%%% END EVN %%%%%%%%%%%

  %(fiveMonths => sixMonths) & (sixMonths => sevenMonths) &
  (![d] ( data(d) & (always((~sixmonths => delete(mapOnWeb, mapOnWeb, d)))))  & ![d] ( data(d) & (( (public(d) => Pread(mapOnWeb, cardioMon, d)) &  (sensitive(d) => ~Pread(mapOnWeb, cardioMon, d)))))  & ![d] ( data(d) & (![customer] ( Customer(customer) & ( (EQUAL(subject(d), customer) => ((((((((((((( (username(d) => ((Pread(customer, cardioMon, d) & Pupdate(customer, cardioMon, d)) & Pdelete(customer, cardioMon, d))) |  (password(d) => ((Pread(customer, cardioMon, d) & Pupdate(customer, cardioMon, d)) & Pdelete(customer, cardioMon, d)))) |  (userId(d) => ((Pread(customer, cardioMon, d) & Pupdate(customer, cardioMon, d)) & Pdelete(customer, cardioMon, d)))) |  (displayName(d) => ((Pread(customer, cardioMon, d) & Pupdate(customer, cardioMon, d)) & Pdelete(customer, cardioMon, d)))) |  (gender(d) => ((Pread(customer, cardioMon, d) & Pupdate(customer, cardioMon, d)) & Pdelete(customer, cardioMon, d)))) |  (age(d) => ((Pread(customer, cardioMon, d) & Pupdate(customer, cardioMon, d)) & Pdelete(customer, cardioMon, d)))) |  (height(d) => ((Pread(customer, cardioMon, d) & Pupdate(customer, cardioMon, d)) & Pdelete(customer, cardioMon, d)))) |  (weight(d) => ((Pread(customer, cardioMon, d) & Pupdate(customer, cardioMon, d)) & Pdelete(customer, cardioMon, d)))) |  (sugarLevel(d) => ((Pread(customer, cardioMon, d) & Pupdate(customer, cardioMon, d)) & Pdelete(customer, cardioMon, d)))) |  (heartbeat(d) => ((Pread(customer, cardioMon, d) & Pupdate(customer, cardioMon, d)) & Pdelete(customer, cardioMon, d)))) |  (activity(d) => ((Pread(customer, cardioMon, d) & Pupdate(customer, cardioMon, d)) & Pdelete(customer, cardioMon, d)))) |  (country(d) => ((Pread(customer, cardioMon, d) & Pupdate(customer, cardioMon, d)) & Pdelete(customer, cardioMon, d)))) |  (public(d) => ((Pread(customer, cardioMon, d) & Pupdate(customer, cardioMon, d)) & Pdelete(customer, cardioMon, d)))) |  (sensitive(d) => ((Pread(customer, cardioMon, d) & Pupdate(customer, cardioMon, d)) & Pdelete(customer, cardioMon, d)))))))))  ) => (?[d] ( data(d) & (((( (EQUAL(subject(d), kim) =>  (public(d) | sensitive(d) => ((Pread(kim, cardioMon, d) & Pupdate(kim, cardioMon, d)) & Pdelete(kim, cardioMon, d)))) &  (sensitive(d) => ~Pread(mapOnWeb, cardioMon, d))) &  (public(d) => Pread(mapOnWeb, cardioMon, d))) &  (EQUAL(subject(d), kim) => always((~sixmonths => delete(mapOnWeb, mapOnWeb, d)))))))  ))
