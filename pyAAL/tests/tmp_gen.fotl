begin_problem(TranslatedInput).
list_of_descriptions.
name({*Translated Input*}).
author({**}).
status(unknown).
description({**}).
end_of_list.

list_of_symbols.
functions[(CTS,0),(PO,0),(auditor,0),(cardioMon,0),(customer2,0),(dataSpacer,0),(kim,0),(mapOnWeb,0),(subject,1),(wearableCo,0)].
predicates[(Actor,1),(Auditor,1),(CloudCustomer,1),(CloudProvider,1),(Customer,1),(DataController,1),(DataProcessor,1),(DataSubject,1),(DwDataController,1),(EQUAL,2),(EndUser,1),(Padd,3),(Paudit,3),(PcreateBusinessProfile,3),(PcreateCustomerProfile,3),(Pdelete,3),(Pedit,3),(PgetWellbeingScore,3),(PgetWellbeingTraining,3),(Plogin,3),(PmanageBusinessFormula,3),(Pread,3),(PreceiveAlerts,3),(PreceiveBreachNotif,3),(PreceivePVA,3),(PreceiveTVA,3),(PrequestDataCompliance,3),(PrequestDataPath,3),(PrequestRTI,3),(PrequestStat,3),(PsubmitRTI,3),(Pupdate,3),(PupdateThresholds,3),(PupdateWellbeing,3),(PviewActiveUsers,3),(Pwrite,3),(WCOAdmin,1),(WCOemployee,1),(WDevice,1),(_L,1),(_P,1),(_P1,1),(_R,1),(_U,1),(_waitfor_L,1),(activity,1),(add,3),(age,1),(audit,3),(blood,1),(country,1),(createBusinessProfile,3),(createCustomerProfile,3),(data,1),(delete,3),(displayName,1),(edit,3),(gender,1),(getWellbeingScore,3),(getWellbeingTraining,3),(heartbeat,1),(height,1),(login,3),(manageBusinessFormula,3),(password,1),(public,1),(read,3),(receiveAlerts,3),(receiveBreachNotif,3),(receivePVA,3),(receiveTVA,3),(requestDataCompliance,3),(requestDataPath,3),(requestRTI,3),(requestStat,3),(sensitive,1),(sixmonths,0),(submitRTI,3),(sugarLevel,1),(update,3),(updateThresholds,3),(updateWellbeing,3),(userId,1),(username,1),(viewActiveUsers,3),(weight,1),(wellbeing,1),(write,3)].
end_of_list.

list_of_formulae(axioms).
formula(data(CTS)).
formula(Actor(CTS)).
formula(DataSubject(CTS)).
formula(DataController(CTS)).
formula(DataProcessor(CTS)).
formula(DwDataController(CTS)).
formula(Auditor(CTS)).
formula(CloudProvider(CTS)).
formula(CloudCustomer(CTS)).
formula(EndUser(CTS)).
formula(sensitive(CTS)).
formula(forall([_x],or(not(sensitive(CTS)),data(CTS)))).
formula(public(CTS)).
formula(forall([_x],or(not(public(CTS)),data(CTS)))).
formula(username(CTS)).
formula(forall([_x],or(not(username(CTS)),sensitive(CTS)))).
formula(password(CTS)).
formula(forall([_x],or(not(password(CTS)),sensitive(CTS)))).
formula(userId(CTS)).
formula(forall([_x],or(not(userId(CTS)),sensitive(CTS)))).
formula(displayName(CTS)).
formula(forall([_x],or(not(displayName(CTS)),public(CTS)))).
formula(gender(CTS)).
formula(forall([_x],or(not(gender(CTS)),public(CTS)))).
formula(age(CTS)).
formula(forall([_x],or(not(age(CTS)),public(CTS)))).
formula(height(CTS)).
formula(forall([_x],or(not(height(CTS)),sensitive(CTS)))).
formula(weight(CTS)).
formula(forall([_x],or(not(weight(CTS)),sensitive(CTS)))).
formula(sugarLevel(CTS)).
formula(forall([_x],or(not(sugarLevel(CTS)),sensitive(CTS)))).
formula(blood(CTS)).
formula(forall([_x],or(not(blood(CTS)),sensitive(CTS)))).
formula(heartbeat(CTS)).
formula(forall([_x],or(not(heartbeat(CTS)),sensitive(CTS)))).
formula(activity(CTS)).
formula(forall([_x],or(not(activity(CTS)),sensitive(CTS)))).
formula(wellbeing(CTS)).
formula(forall([_x],or(not(wellbeing(CTS)),sensitive(CTS)))).
formula(country(CTS)).
formula(forall([_x],or(not(country(CTS)),public(CTS)))).
formula(DataSubject(CTS)).
formula(DataController(CTS)).
formula(DataProcessor(CTS)).
formula(WCOemployee(CTS)).
formula(forall([_x],or(not(WCOemployee(CTS)),DataController(CTS)))).
formula(WCOAdmin(CTS)).
formula(forall([_x],or(not(WCOAdmin(CTS)),WCOemployee(CTS)))).
formula(WDevice(CTS)).
formula(forall([_x],or(not(WDevice(CTS)),DataController(CTS)))).
formula(Customer(CTS)).
formula(forall([_x],or(not(Customer(CTS)),DataSubject(CTS)))).
formula(forall([_x],forall([_y],forall([_z],or(not(read(_x,_y,_z)),Pread(_x,_y,_z)))))).
formula(forall([_x],forall([_y],forall([_z],or(not(write(_x,_y,_z)),Pwrite(_x,_y,_z)))))).
formula(forall([_x],forall([_y],forall([_z],or(not(audit(_x,_y,_z)),Paudit(_x,_y,_z)))))).
formula(forall([_x],forall([_y],forall([_z],or(not(createCustomerProfile(_x,_y,_z)),PcreateCustomerProfile(_x,_y,_z)))))).
formula(forall([_x],forall([_y],forall([_z],or(not(createBusinessProfile(_x,_y,_z)),PcreateBusinessProfile(_x,_y,_z)))))).
formula(forall([_x],forall([_y],forall([_z],or(not(login(_x,_y,_z)),Plogin(_x,_y,_z)))))).
formula(forall([_x],forall([_y],forall([_z],or(not(add(_x,_y,_z)),Padd(_x,_y,_z)))))).
formula(forall([_x],forall([_y],forall([_z],or(not(edit(_x,_y,_z)),Pedit(_x,_y,_z)))))).
formula(forall([_x],forall([_y],forall([_z],or(not(update(_x,_y,_z)),Pupdate(_x,_y,_z)))))).
formula(forall([_x],forall([_y],forall([_z],or(not(delete(_x,_y,_z)),Pdelete(_x,_y,_z)))))).
formula(forall([_x],forall([_y],forall([_z],or(not(submitRTI(_x,_y,_z)),PsubmitRTI(_x,_y,_z)))))).
formula(forall([_x],forall([_y],forall([_z],or(not(requestRTI(_x,_y,_z)),PrequestRTI(_x,_y,_z)))))).
formula(forall([_x],forall([_y],forall([_z],or(not(updateWellbeing(_x,_y,_z)),PupdateWellbeing(_x,_y,_z)))))).
formula(forall([_x],forall([_y],forall([_z],or(not(getWellbeingTraining(_x,_y,_z)),PgetWellbeingTraining(_x,_y,_z)))))).
formula(forall([_x],forall([_y],forall([_z],or(not(getWellbeingScore(_x,_y,_z)),PgetWellbeingScore(_x,_y,_z)))))).
formula(forall([_x],forall([_y],forall([_z],or(not(manageBusinessFormula(_x,_y,_z)),PmanageBusinessFormula(_x,_y,_z)))))).
formula(forall([_x],forall([_y],forall([_z],or(not(updateThresholds(_x,_y,_z)),PupdateThresholds(_x,_y,_z)))))).
formula(forall([_x],forall([_y],forall([_z],or(not(viewActiveUsers(_x,_y,_z)),PviewActiveUsers(_x,_y,_z)))))).
formula(forall([_x],forall([_y],forall([_z],or(not(requestStat(_x,_y,_z)),PrequestStat(_x,_y,_z)))))).
formula(forall([_x],forall([_y],forall([_z],or(not(requestDataCompliance(_x,_y,_z)),PrequestDataCompliance(_x,_y,_z)))))).
formula(forall([_x],forall([_y],forall([_z],or(not(requestDataPath(_x,_y,_z)),PrequestDataPath(_x,_y,_z)))))).
formula(forall([_x],forall([_y],forall([_z],or(not(receiveAlerts(_x,_y,_z)),PreceiveAlerts(_x,_y,_z)))))).
formula(forall([_x],forall([_y],forall([_z],or(not(receivePVA(_x,_y,_z)),PreceivePVA(_x,_y,_z)))))).
formula(forall([_x],forall([_y],forall([_z],or(not(receiveTVA(_x,_y,_z)),PreceiveTVA(_x,_y,_z)))))).
formula(forall([_x],forall([_y],forall([_z],or(not(receiveBreachNotif(_x,_y,_z)),PreceiveBreachNotif(_x,_y,_z)))))).
formula(forall([_x],forall([_y],forall([_z],or(not(createCustomerProfile(_x,_y,_z)),PcreateCustomerProfile(_x,_y,_z)))))).
formula(forall([_x],forall([_y],forall([_z],or(not(login(_x,_y,_z)),Plogin(_x,_y,_z)))))).
formula(forall([_x],forall([_y],forall([_z],or(not(add(_x,_y,_z)),Padd(_x,_y,_z)))))).
formula(forall([_x],forall([_y],forall([_z],or(not(edit(_x,_y,_z)),Pedit(_x,_y,_z)))))).
formula(forall([_x],forall([_y],forall([_z],or(not(update(_x,_y,_z)),Pupdate(_x,_y,_z)))))).
formula(forall([_x],forall([_y],forall([_z],or(not(delete(_x,_y,_z)),Pdelete(_x,_y,_z)))))).
formula(forall([_x],forall([_y],forall([_z],or(not(submitRTI(_x,_y,_z)),PsubmitRTI(_x,_y,_z)))))).
formula(forall([_x],forall([_y],forall([_z],or(not(requestRTI(_x,_y,_z)),PrequestRTI(_x,_y,_z)))))).
formula(forall([_x],forall([_y],forall([_z],or(not(updateWellbeing(_x,_y,_z)),PupdateWellbeing(_x,_y,_z)))))).
formula(forall([_x],forall([_y],forall([_z],or(not(getWellbeingTraining(_x,_y,_z)),PgetWellbeingTraining(_x,_y,_z)))))).
formula(forall([_x],forall([_y],forall([_z],or(not(getWellbeingScore(_x,_y,_z)),PgetWellbeingScore(_x,_y,_z)))))).
formula(forall([_x],forall([_y],forall([_z],or(not(requestStat(_x,_y,_z)),PrequestStat(_x,_y,_z)))))).
formula(forall([_x],forall([_y],forall([_z],or(not(requestDataPath(_x,_y,_z)),PrequestDataPath(_x,_y,_z)))))).
formula(forall([_x],forall([_y],forall([_z],or(not(receiveAlerts(_x,_y,_z)),PreceiveAlerts(_x,_y,_z)))))).
formula(forall([_x],forall([_y],forall([_z],or(not(receivePVA(_x,_y,_z)),PreceivePVA(_x,_y,_z)))))).
formula(forall([_x],forall([_y],forall([_z],or(not(receiveBreachNotif(_x,_y,_z)),PreceiveBreachNotif(_x,_y,_z)))))).
formula(forall([_x],forall([_y],forall([_z],or(not(createBusinessProfile(_x,_y,_z)),PcreateBusinessProfile(_x,_y,_z)))))).
formula(forall([_x],forall([_y],forall([_z],or(not(manageBusinessFormula(_x,_y,_z)),PmanageBusinessFormula(_x,_y,_z)))))).
formula(forall([_x],forall([_y],forall([_z],or(not(updateThresholds(_x,_y,_z)),PupdateThresholds(_x,_y,_z)))))).
formula(forall([_x],forall([_y],forall([_z],or(not(viewActiveUsers(_x,_y,_z)),PviewActiveUsers(_x,_y,_z)))))).
formula(forall([_x],forall([_y],forall([_z],or(not(requestDataCompliance(_x,_y,_z)),PrequestDataCompliance(_x,_y,_z)))))).
formula(Actor(auditor)).
formula(Actor(PO)).
formula(Customer(kim)).
formula(DataSubject(customer2)).
formula(DataController(wearableCo)).
formula(DataProcessor(cardioMon)).
formula(DataProcessor(mapOnWeb)).
formula(DataProcessor(dataSpacer)).
formula(forall([_x],and(data(_x),and(or(not(public(_x)),Pread(mapOnWeb,cardioMon,_x)),or(not(sensitive(_x)),not(Pread(mapOnWeb,cardioMon,_x))))))).
formula(forall([_x],and(data(_x),forall([_y],and(Customer(_y),or(not(EQUAL(subject(_x),_y)),or(or(or(or(or(or(or(or(or(or(or(or(or(or(not(username(_x)),and(and(Pread(_y,cardioMon,_x),Pupdate(_y,cardioMon,_x)),Pdelete(_y,cardioMon,_x))),or(not(password(_x)),and(and(Pread(_y,cardioMon,_x),Pupdate(_y,cardioMon,_x)),Pdelete(_y,cardioMon,_x)))),or(not(userId(_x)),and(and(Pread(_y,cardioMon,_x),Pupdate(_y,cardioMon,_x)),Pdelete(_y,cardioMon,_x)))),or(not(displayName(_x)),and(and(Pread(_y,cardioMon,_x),Pupdate(_y,cardioMon,_x)),Pdelete(_y,cardioMon,_x)))),or(not(gender(_x)),and(and(Pread(_y,cardioMon,_x),Pupdate(_y,cardioMon,_x)),Pdelete(_y,cardioMon,_x)))),or(not(age(_x)),and(and(Pread(_y,cardioMon,_x),Pupdate(_y,cardioMon,_x)),Pdelete(_y,cardioMon,_x)))),or(not(height(_x)),and(and(Pread(_y,cardioMon,_x),Pupdate(_y,cardioMon,_x)),Pdelete(_y,cardioMon,_x)))),or(not(weight(_x)),and(and(Pread(_y,cardioMon,_x),Pupdate(_y,cardioMon,_x)),Pdelete(_y,cardioMon,_x)))),or(not(sugarLevel(_x)),and(and(Pread(_y,cardioMon,_x),Pupdate(_y,cardioMon,_x)),Pdelete(_y,cardioMon,_x)))),or(not(heartbeat(_x)),and(and(Pread(_y,cardioMon,_x),Pupdate(_y,cardioMon,_x)),Pdelete(_y,cardioMon,_x)))),or(not(activity(_x)),and(and(Pread(_y,cardioMon,_x),Pupdate(_y,cardioMon,_x)),Pdelete(_y,cardioMon,_x)))),or(not(country(_x)),and(and(Pread(_y,cardioMon,_x),Pupdate(_y,cardioMon,_x)),Pdelete(_y,cardioMon,_x)))),or(not(public(_x)),and(and(Pread(_y,cardioMon,_x),Pupdate(_y,cardioMon,_x)),Pdelete(_y,cardioMon,_x)))),or(not(sensitive(_x)),and(and(Pread(_y,cardioMon,_x),Pupdate(_y,cardioMon,_x)),Pdelete(_y,cardioMon,_x)))))))))).
formula(forall([_x],and(data(_x),_P(_x)))).
formula(forall([_x],or(not(data(_x)),or(or(or(and(EQUAL(subject(_x),kim),and(or(public(_x),sensitive(_x)),or(or(not(Pread(kim,cardioMon,_x)),not(Pupdate(kim,cardioMon,_x))),not(Pdelete(kim,cardioMon,_x))))),and(sensitive(_x),Pread(mapOnWeb,cardioMon,_x))),and(public(_x),not(Pread(mapOnWeb,cardioMon,_x)))),and(EQUAL(subject(_x),kim),_P1(_x)))))).
formula(always(forall([_x],implies(_P(_x),_R(_x))))).
formula(always(forall([_x],implies(_R(_x),next(_R(_x)))))).
formula(always(forall([_x],implies(_R(_x),or(sixmonths,delete(mapOnWeb,mapOnWeb,_x)))))).
formula(always(forall([_x],implies(_L(_x),and(not(sixmonths),not(delete(mapOnWeb,mapOnWeb,_x))))))).
formula(always(forall([_x],implies(and(_P1(_x),not(_L(_x))),_waitfor_L(_x))))).
formula(always(forall([_x],sometime(not(_waitfor_L(_x)))))).
formula(always(forall([_x],implies(_waitfor_L(_x),next(_U(_x)))))).
formula(always(forall([_x],implies(_U(_x),or(_waitfor_L(_x),_L(_x)))))).
end_of_list.

end_problem.
