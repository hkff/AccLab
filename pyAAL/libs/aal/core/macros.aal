//======================= Compliance / Validity / Satisfiability =======================//


LOAD "core.validate"
LOAD "core.resolve"
LOAD "core.sat"

/*
 * Validate a single clause
 */
MACRO validate2(c1) (
"""
_c1 = self.clause(c1)
if _c1 is not None:
    print(validate2(self, _c1.to_ltl()))
"""
)




/*
 * AAL Check
 */
MACRO check_aal() (
"""
print(Color(check_aal(self, verbose=True)))
"""
)

//======================= FOTL =======================//

/*
 * fotl check
 */
MACRO fotl_check (
"""
print(AALtoFOTL(self.aalprog))
"""
)


/*
 * Translate clause c to FOTL
 */
MACRO clause_fotl(c) (
"""
cl = self.clause(c)
if cl is not None:
    print(cl.to_ltl())
"""
)


/*
 * Evaluate an FOTL expression
 */
MACRO fotl(a) (
"""
self.apply_check(code=a , verbose=False, show=True)["print"]
"""
)

//======================= MISC =======================//

/*
 * Show all loaded libs
 */
MACRO show_libs (
"""
print("loaded libs....")
for x in self.libs:
    print(x.file)
print("\n")
"""
)


/*
 * Print a clause
 */
MACRO show_clause(c) (
"""
cl = self.clause(c)
if cl is not None:
    print(cl)
"""
)


/*
 * Get natural language translation of a clause
 */
MACRO to_natural(c) (
"""
cl = self.clause(c)
if cl is not None:
    print(cl.to_natural())
"""
)


/*
 * Disable agents declarations
 */
MACRO skip_defs() (
"""
def exitAgentDec(ctx):
    pass
self.exitAgentDec = exitAgentDec
"""
)

