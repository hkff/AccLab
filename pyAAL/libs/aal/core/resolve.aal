/******************************************************************
 ******************************************************************
 *    Conflict / Compliance / Resolve  using masking algorithm
 ******************************************************************
 ******************************************************************/
MACRO resolve(c1) (
"""
_c1 = self.clause(c1)
if _c1 is not None:
    conflict(self, _c1, resolve=True, algo=0)
"""
)

MACRO vresolve(c1) (
"""
_c1 = self.clause(c1)
if _c1 is not None:
    conflict(self, _c1, resolve=True, verbose=True, algo=0)
"""
)


MACRO conflict(c1) (
"""
_c1 = self.clause(c1)
if _c1 is not None:
    conflict(self, _c1, algo=0)
"""
)

MACRO vconflict(c1) (
"""
_c1 = self.clause(c1)
if _c1 is not None:
    conflict(self, _c1, verbose=True, algo=0)
"""
)

MACRO conflict(c1 depth) (
"""
_c1 = self.clause(c1)
if _c1 is not None:
    conflict(self, _c1, algo=0, depth=int(depth))
"""
)

MACRO vconflict(c1 depth) (
"""
_c1 = self.clause(c1)
if _c1 is not None:
    conflict(self, _c1, verbose=True, algo=0, depth=int(depth))
"""
)

MACRO compliance(c1 c2) (
"""
_c1 = self.clause(c1)
_c2 = self.clause(c2)
if _c1 is not None and _c2 is not None:
    conflict(self, _c1, c2=_c2, algo=0)
"""
)

MACRO vcompliance(c1 c2) (
"""
_c1 = self.clause(c1)
_c2 = self.clause(c2)
if _c1 is not None and _c2 is not None:
    conflict(self, _c1, c2=_c2, verbose=True, algo=0)
"""
)

MACRO compliance(c1 c2 depth) (
"""
_c1 = self.clause(c1)
_c2 = self.clause(c2)
if _c1 is not None and _c2 is not None:
    conflict(self, _c1, c2=_c2, algo=0, depth=int(depth))
"""
)

MACRO vcompliance(c1 c2 depth) (
"""
_c1 = self.clause(c1)
_c2 = self.clause(c2)
if _c1 is not None and _c2 is not None:
    conflict(self, _c1, c2=_c2, verbose=True, algo=0, depth=int(depth))
"""
)

/******************************************************************
 ******************************************************************
 *    Conflict / Compliance / Resolve  using combining algorithm
 ******************************************************************
 ******************************************************************/

MACRO eresolve(c1) (
"""
_c1 = self.clause(c1)
if _c1 is not None:
    conflict(self, _c1, resolve=True, algo=1)
"""
)

MACRO veresolve(c1) (
"""
_c1 = self.clause(c1)
if _c1 is not None:
    conflict(self, _c1, resolve=True, verbose=True, algo=1)
"""
)


MACRO econflict(c1) (
"""
_c1 = self.clause(c1)
if _c1 is not None:
    conflict(self, _c1, algo=1)
"""
)

MACRO veconflict(c1) (
"""
_c1 = self.clause(c1)
if _c1 is not None:
    conflict(self, _c1, verbose=True, algo=1)
"""
)


MACRO econflict(c1 depth) (
"""
_c1 = self.clause(c1)
if _c1 is not None:
    conflict(self, _c1, algo=1, depth=int(depth))
"""
)

MACRO veconflict(c1 depth) (
"""
_c1 = self.clause(c1)
if _c1 is not None:
    conflict(self, _c1, verbose=True, algo=1, depth=int(depth))
"""
)


MACRO ecompliance(c1 c2) (
"""
_c1 = self.clause(c1)
_c2 = self.clause(c2)
if _c1 is not None and _c2 is not None:
    conflict(self, _c1, c2=_c2, algo=1)
"""
)

MACRO vecompliance(c1 c2) (
"""
_c1 = self.clause(c1)
_c2 = self.clause(c2)
if _c1 is not None and _c2 is not None:
    conflict(self, _c1, c2=_c2, verbose=True, algo=1)
"""
)

MACRO ecompliance(c1 c2 depth) (
"""
_c1 = self.clause(c1)
_c2 = self.clause(c2)
if _c1 is not None and _c2 is not None:
    conflict(self, _c1, c2=_c2, algo=1, depth=int(depth))
"""
)

MACRO vecompliance(c1 c2 depth) (
"""
_c1 = self.clause(c1)
_c2 = self.clause(c2)
if _c1 is not None and _c2 is not None:
    conflict(self, _c1, c2=_c2, verbose=True, algo=1, depth=int(depth))
"""
)