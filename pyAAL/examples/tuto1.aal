/**
 * AccLab UserGuide : Getting started
 * Tuto 1
 * Author : Walid Benghabrit
 */

// Loading types & macros libraries
LOAD "core.types"
LOAD "core.macros"

// Declaring services
SERVICE read
SERVICE store
SERVICE delete

// Declaring actors
AGENT alice TYPES(Actor) REQUIRED(read store delete) PROVIDED()
AGENT bob   TYPES(Actor) REQUIRED(read store delete) PROVIDED()
AGENT css   TYPES(Actor) REQUIRED() PROVIDED(read store delete)

/*
 * Cloud storage service provider policy
 */
CLAUSE css_policy (
    FORALL d:data FORALL a:Actor

    // Allow users to read their data
    IF (d.subject == a) THEN {
        PERMIT a.read[css](d)
    } AND

    // Deny access to read other
    IF (d.subject != a) THEN {
        DENY a.read[css](d)
    } AND

    // Allow css to read/delete stored data
    PERMIT css.read[css](d) AND
    PERMIT css.delete[css](d)
)

/*
 * Alice's preferences
 */
CLAUSE alice_pref (
    FORALL d:data
    // Alice want to be able to read all her data stored on css
    IF (d.subject == alice) THEN {
        PERMIT alice.read[css](d)
        AND
        // Bob cannot read Alice's data
        DENY bob.read[css](d)
    }
)

// Call validate macro to perform the compliance check
CALL validate("css_policy" "alice_pref")


// Extended check
CHECK c1() {
"""
@verbose
~(
    % Build the environment
    @buildenv

    % Add extra condition
    (![f] (subject(f, alice) => ~subject(f, bob))) &

    % The check P => U
    (clause(css_policy).ue)
    =>
    (clause(alice_pref).ue)
)
"""
}
APPLY c1()
