[{"cssClass": "PolicyUI", "radius": 0, "y": 266, "tlabeltxt": "otherProviderPolicy", "userData": {}, "x": 64, "dasharray": null, "id": "3e9df7ac-8521-7e51-916e-b40499ba1b72", "alpha": 1, "ports": [{"cssClass": "draw2d_InputPort", "locator": "draw2d.layout.locator.InputPortLocator", "bgColor": "#4F6870", "userData": {}, "id": "af637f6c-78a8-eb3e-29d5-783eaa26a168", "alpha": 1, "dasharray": null, "angle": 0, "type": "draw2d.InputPort", "name": "input0", "port": "draw2d.InputPort", "maxFanOut": 9007199254740991, "height": 10, "width": 10, "stroke": 1, "color": "#1B1B1B"}, {"cssClass": "draw2d_OutputPort", "locator": "draw2d.layout.locator.OutputPortLocator", "bgColor": "#4F6870", "userData": {}, "id": "821e3c58-219c-29a2-38db-5b8e3aa83d60", "alpha": 1, "dasharray": null, "angle": 0, "type": "draw2d.OutputPort", "name": "output0", "port": "draw2d.OutputPort", "maxFanOut": 9007199254740991, "height": 10, "width": 10, "stroke": 1, "color": "#1B1B1B"}], "angle": 0, "type": "PolicyUI", "policy": "CLAUSE otherProviderPolicy (  \n  // Customer\n  (FORALL c:Customer FORALL d:data IF (d.subject==c)\n        THEN {PERMIT c.read[cardioMon](d) AND PERMIT c.write[cardioMon](d) AND PERMIT c.update[cardioMon](d) AND PERMIT c.delete[cardioMon](d)})\n  AND\n // lines 1,2,7,8,12\n    (FORALL a:Actor FORALL d:UserName IF  ((a==cardioMon) OR @Employee(a) OR (a==mapOnWeb))\n        THEN {DENY a.read[cardioMon](d) AND DENY a.write[cardioMon](d) AND DENY a.update[cardioMon](d)}) \n    AND (FORALL a:Actor FORALL d:Password IF ((a==cardioMon) OR (@Employee(a)) OR (a==mapOnWeb))\n        THEN {DENY a.read[cardioMon](d) AND DENY a.write[cardioMon](d) AND DENY a.update[cardioMon](d)}) \n    AND (FORALL a:Actor FORALL d:TrainingActivity IF ((a==cardioMon) OR (@Employee(a)) OR (a==mapOnWeb))\n        THEN {DENY a.read[cardioMon](d) AND DENY a.write[cardioMon](d) AND DENY a.update[cardioMon](d)}) \n    AND (FORALL a:Actor FORALL d:Height IF ((a==cardioMon) OR (@Employee(a)) OR (a==mapOnWeb))\n        THEN {DENY a.read[cardioMon](d) AND DENY a.write[cardioMon](d) AND DENY a.update[cardioMon](d)}) \n    AND (FORALL a:Actor FORALL d:Weight IF ((a==cardioMon) OR (@Employee(a)) OR (a==mapOnWeb))\n        THEN {DENY a.read[cardioMon](d) AND DENY a.write[cardioMon](d) AND DENY a.update[cardioMon](d)}) \n  AND \n // lines 3,4,5\n     (FORALL d:UserId (PERMIT cardioMon.read[cardioMon](d) AND (FORALL e:Employee PERMIT e.read[cardioMon](d)) AND DENY mapOnWeb.read[cardioMon](d)))\n    AND (FORALL d:DisplayName (PERMIT cardioMon.read[cardioMon](d) AND (FORALL e:Employee PERMIT e.read[cardioMon](d)) AND DENY mapOnWeb.read[cardioMon](d)))\n    AND (FORALL d:Gender  (PERMIT cardioMon.read[cardioMon](d) AND (FORALL e:Employee PERMIT e.read[cardioMon](d)) AND DENY mapOnWeb.read[cardioMon](d)))\n    AND (FORALL a:Actor FORALL d:UserId IF  ((a==cardioMon) OR (@Employee(a)) OR (a==mapOnWeb))\n        THEN {DENY a.write[cardioMon](d) AND DENY a.update[cardioMon](d)}) \n    AND (FORALL a:Actor FORALL d:DisplayName IF ((a==cardioMon) OR (@Employee(a)) OR (a==mapOnWeb))\n        THEN {DENY a.write[cardioMon](d) AND DENY a.update[cardioMon](d)}) \n    AND (FORALL a:Actor FORALL d:Gender IF ((a==cardioMon) OR (@Employee(a)) OR (a==mapOnWeb))\n        THEN {DENY a.write[cardioMon](d) AND DENY a.update[cardioMon](d)}) \n  AND\n // lines 6,13\n     (FORALL a:Actor FORALL d:Age IF  ((a==cardioMon) OR (@Employee(a)) OR (a==mapOnWeb))\n        THEN {PERMIT a.read[cardioMon](d) AND DENY a.write[cardioMon](d) AND DENY a.update[cardioMon](d)})\n    AND (FORALL a:Actor FORALL d:Country IF ((a==cardioMon) OR (@Employee(a)) OR (a==mapOnWeb))\n        THEN {PERMIT a.read[cardioMon](d) AND DENY a.write[cardioMon](d) AND DENY a.update[cardioMon](d)}) \n  AND\n // lines 9,10,11 \n      (FORALL d:SugarLevel (DENY cardioMon.read[cardioMon](d) AND (FORALL e:Employee DENY e.read[cardioMon](d)) AND PERMIT mapOnWeb.read[cardioMon](d)))\n    AND (FORALL d:BloodPressure (DENY cardioMon.read[cardioMon](d) AND (FORALL e:Employee DENY e.read[cardioMon](d)) AND PERMIT mapOnWeb.read[cardioMon](d)))\n    AND (FORALL d:Heartbeat (DENY cardioMon.read[cardioMon](d) AND (FORALL e:Employee DENY e.read[cardioMon](d)) AND PERMIT mapOnWeb.read[cardioMon](d)))\n    AND (FORALL a:Actor FORALL d:SugarLevel IF  ((a==cardioMon) OR (@Employee(a)) OR (a==mapOnWeb))\n        THEN {DENY a.write[cardioMon](d) AND DENY a.update[cardioMon](d)}) \n    AND (FORALL a:Actor FORALL d:BloodPressure IF ((a==cardioMon) OR (@Employee(a)) OR (a==mapOnWeb))\n        THEN {DENY a.write[cardioMon](d) AND DENY a.update[cardioMon](d)}) \n    AND (FORALL a:Actor FORALL d:Heartbeat IF ((a==cardioMon) OR (@Employee(a)) OR (a==mapOnWeb))\n        THEN {DENY a.write[cardioMon](d) AND DENY a.update[cardioMon](d)}) \n        \n // data transfer \n // From DPPT: Kardio - Mon has a data transfer policy country where data will be transferred is Greece\n // DATA: sensitive ACTION: transfer SOURCE: cardioMon TARGET-LOCATION : germany\n\tAND (FORALL d:Sensitive FORALL a:Actor IF (@Europe(a)) THEN {PERMIT cardioMon.transfer[a](d)}) \n\tAND (FORALL d:Sensitive FORALL a:Actor IF (NOT @Europe(a)) THEN {DENY cardioMon.transfer[a](d)}) \n\t\n// data retention \n// From DPPT: The data retention period (period after which data will be deleted by CardioMon) is 6 month\n// DATA: sensitive RETENTION: 6 month PROVIDER: cardioMon\n    AND (FORALL ds:Sensitive  MUST( cardioMon.delete[cardioMon](ds) BEFORE \"6 month\"))\n \n)", "height": 54, "bgColor": "#A0A0A0", "width": 152, "stroke": 1, "color": "#1B1B1B"}, {"cssClass": "PolicyUI", "radius": 0, "y": 157, "tlabeltxt": "wearableCoPolicy", "userData": {}, "x": 373, "dasharray": null, "id": "f97f1af9-f1a2-2707-f17c-b6049027ccd5", "alpha": 1, "ports": [{"cssClass": "draw2d_InputPort", "locator": "draw2d.layout.locator.InputPortLocator", "bgColor": "#4F6870", "userData": {}, "id": "f613321d-ba29-4167-7779-7dfc2b2610fd", "alpha": 1, "dasharray": null, "angle": 0, "type": "draw2d.InputPort", "name": "input0", "port": "draw2d.InputPort", "maxFanOut": 9007199254740991, "height": 10, "width": 10, "stroke": 1, "color": "#1B1B1B"}, {"cssClass": "draw2d_OutputPort", "locator": "draw2d.layout.locator.OutputPortLocator", "bgColor": "#4F6870", "userData": {}, "id": "bda2fdcb-c365-d938-dbd1-d5906059f6ff", "alpha": 1, "dasharray": null, "angle": 0, "type": "draw2d.OutputPort", "name": "output0", "port": "draw2d.OutputPort", "maxFanOut": 9007199254740991, "height": 10, "width": 10, "stroke": 1, "color": "#1B1B1B"}], "angle": 0, "type": "PolicyUI", "policy": "CLAUSE wearableCoPolicy (  \n\t(FORALL e:Employee FORALL d:UserName (DENY e.read[cardioMon](d) AND DENY e.write[cardioMon](d) AND DENY e.update[cardioMon](d)))\n\tAND (FORALL e:Employee FORALL d:TrainingActivity (DENY e.read[cardioMon](d) AND DENY e.write[cardioMon](d) AND DENY e.update[cardioMon](d)))\n\tAND (FORALL e:Employee FORALL d:Password (DENY e.read[cardioMon](d) AND DENY e.write[cardioMon](d) AND DENY e.update[cardioMon](d)))\n\tAND (FORALL e:Employee FORALL d:Height (DENY e.read[cardioMon](d) AND DENY e.write[cardioMon](d) AND DENY e.update[cardioMon](d)))\n\tAND (FORALL e:Employee FORALL d:Weight (DENY e.read[cardioMon](d) AND DENY e.write[cardioMon](d) AND DENY e.update[cardioMon](d)))\n\tAND (FORALL e:Employee FORALL d:SugarLevel (DENY e.read[cardioMon](d) AND DENY e.write[cardioMon](d) AND DENY e.update[cardioMon](d)))\n\tAND (FORALL e:Employee FORALL d:BloodPressure (DENY e.read[cardioMon](d) AND DENY e.write[cardioMon](d) AND DENY e.update[cardioMon](d)))\n\tAND (FORALL e:Employee FORALL d:Heartbeat (DENY e.read[cardioMon](d) AND DENY e.write[cardioMon](d) AND DENY e.update[cardioMon](d)))\n\tAND (FORALL e:Employee FORALL d:UserId (PERMIT e.read[cardioMon](d) AND DENY e.write[cardioMon](d) AND DENY e.update[cardioMon](d)))\n\tAND (FORALL e:Employee FORALL d:DisplayName (PERMIT e.read[cardioMon](d) AND DENY e.write[cardioMon](d) AND DENY e.update[cardioMon](d)))\n\tAND (FORALL e:Employee FORALL d:Gender (PERMIT e.read[cardioMon](d) AND DENY e.write[cardioMon](d) AND DENY e.update[cardioMon](d)))\n\tAND (FORALL e:Employee FORALL d:Age (PERMIT e.read[cardioMon](d) AND DENY e.write[cardioMon](d) AND DENY e.update[cardioMon](d)))\n    AND (FORALL e:Employee FORALL d:Country (PERMIT e.read[cardioMon](d) AND DENY e.write[cardioMon](d) AND DENY e.update[cardioMon](d)))\n\n// data retention \n// From DPPT: WearableCo expects a data retention period of 3 months\n// DATA: sensitive PROVIDER: cardioMon RETENTION: 3 months \n  AND  (FORALL ds:Sensitive MUST(cardioMon.delete[cardioMon](ds) BEFORE \"7 month\"))  \n  \n// data transfer \n// From DPPT: Wearable Co defines Germany as a Location where data can be transferred\n// DATA: sensitive ACTION: transfer SOURCE: cardioMon TARGET-LOCATION : germany\n\tAND  (FORALL d:Sensitive FORALL a:Actor IF (@Greece(a)) THEN {DENY cardioMon.transfer[a](d)}) \n \n)", "height": 54, "bgColor": "#A0A0A0", "width": 150, "stroke": 1, "color": "#1B1B1B"}, {"cssClass": "PolicyUI", "radius": 0, "y": 50, "tlabeltxt": "KardioMonPolicy", "userData": {}, "x": 61, "dasharray": null, "id": "869596b2-9182-3b51-cad6-bc45fb73b135", "alpha": 1, "ports": [{"cssClass": "draw2d_InputPort", "locator": "draw2d.layout.locator.InputPortLocator", "bgColor": "#4F6870", "userData": {}, "id": "8ea997fe-ea63-f25a-ff27-8f6efb767829", "alpha": 1, "dasharray": null, "angle": 0, "type": "draw2d.InputPort", "name": "input0", "port": "draw2d.InputPort", "maxFanOut": 9007199254740991, "height": 10, "width": 10, "stroke": 1, "color": "#1B1B1B"}, {"cssClass": "draw2d_OutputPort", "locator": "draw2d.layout.locator.OutputPortLocator", "bgColor": "#4F6870", "userData": {}, "id": "4a226a5e-7cc9-b1a1-7b82-cebad1e64db3", "alpha": 1, "dasharray": null, "angle": 0, "type": "draw2d.OutputPort", "name": "output0", "port": "draw2d.OutputPort", "maxFanOut": 9007199254740991, "height": 10, "width": 10, "stroke": 1, "color": "#1B1B1B"}], "angle": 0, "type": "PolicyUI", "policy": "CLAUSE KardioMonPolicy (  \n  // Customer\n  (FORALL c:Customer FORALL d:data IF (d.subject==c)\n        THEN {PERMIT c.read[cardioMon](d) AND PERMIT c.write[cardioMon](d) AND PERMIT c.update[cardioMon](d) AND PERMIT c.delete[cardioMon](d)})\n  AND\n // lines 1,2,7,8,12\n    (FORALL a:Actor FORALL d:UserName IF  ((a==cardioMon) OR @Employee(a) OR (a==mapOnWeb))\n        THEN {DENY a.read[cardioMon](d) AND DENY a.write[cardioMon](d) AND DENY a.update[cardioMon](d)}) \n    AND (FORALL a:Actor FORALL d:Password IF ((a==cardioMon) OR (@Employee(a)) OR (a==mapOnWeb))\n        THEN {DENY a.read[cardioMon](d) AND DENY a.write[cardioMon](d) AND DENY a.update[cardioMon](d)}) \n    AND (FORALL a:Actor FORALL d:TrainingActivity IF ((a==cardioMon) OR (@Employee(a)) OR (a==mapOnWeb))\n        THEN {DENY a.read[cardioMon](d) AND DENY a.write[cardioMon](d) AND DENY a.update[cardioMon](d)}) \n    AND (FORALL a:Actor FORALL d:Height IF ((a==cardioMon) OR (@Employee(a)) OR (a==mapOnWeb))\n        THEN {DENY a.read[cardioMon](d) AND DENY a.write[cardioMon](d) AND DENY a.update[cardioMon](d)}) \n    AND (FORALL a:Actor FORALL d:Weight IF ((a==cardioMon) OR (@Employee(a)) OR (a==mapOnWeb))\n        THEN {DENY a.read[cardioMon](d) AND DENY a.write[cardioMon](d) AND DENY a.update[cardioMon](d)}) \n  AND \n // lines 3,4,5\n     (FORALL d:UserId (PERMIT cardioMon.read[cardioMon](d) AND (FORALL e:Employee PERMIT e.read[cardioMon](d)) AND DENY mapOnWeb.read[cardioMon](d)))\n    AND (FORALL d:DisplayName (PERMIT cardioMon.read[cardioMon](d) AND (FORALL e:Employee PERMIT e.read[cardioMon](d)) AND DENY mapOnWeb.read[cardioMon](d)))\n    AND (FORALL d:Gender  (PERMIT cardioMon.read[cardioMon](d) AND (FORALL e:Employee PERMIT e.read[cardioMon](d)) AND DENY mapOnWeb.read[cardioMon](d)))\n    AND (FORALL a:Actor FORALL d:UserId IF  ((a==cardioMon) OR (@Employee(a)) OR (a==mapOnWeb))\n        THEN {DENY a.write[cardioMon](d) AND DENY a.update[cardioMon](d)}) \n    AND (FORALL a:Actor FORALL d:DisplayName IF ((a==cardioMon) OR (@Employee(a)) OR (a==mapOnWeb))\n        THEN {DENY a.write[cardioMon](d) AND DENY a.update[cardioMon](d)}) \n    AND (FORALL a:Actor FORALL d:Gender IF ((a==cardioMon) OR (@Employee(a)) OR (a==mapOnWeb))\n        THEN {DENY a.write[cardioMon](d) AND DENY a.update[cardioMon](d)}) \n  AND\n // lines 6,13\n     (FORALL a:Actor FORALL d:Age IF  ((a==cardioMon) OR (@Employee(a)) OR (a==mapOnWeb))\n        THEN {PERMIT a.read[cardioMon](d) AND DENY a.write[cardioMon](d) AND DENY a.update[cardioMon](d)})\n    AND (FORALL a:Actor FORALL d:Country IF ((a==cardioMon) OR (@Employee(a)) OR (a==mapOnWeb))\n        THEN {PERMIT a.read[cardioMon](d) AND DENY a.write[cardioMon](d) AND DENY a.update[cardioMon](d)}) \n  AND\n // lines 9,10,11 \n      (FORALL d:SugarLevel (DENY cardioMon.read[cardioMon](d) AND (FORALL e:Employee DENY e.read[cardioMon](d)) AND PERMIT mapOnWeb.read[cardioMon](d)))\n    AND (FORALL d:BloodPressure (DENY cardioMon.read[cardioMon](d) AND (FORALL e:Employee DENY e.read[cardioMon](d)) AND PERMIT mapOnWeb.read[cardioMon](d)))\n    AND (FORALL d:Heartbeat (DENY cardioMon.read[cardioMon](d) AND (FORALL e:Employee DENY e.read[cardioMon](d)) AND PERMIT mapOnWeb.read[cardioMon](d)))\n    AND (FORALL a:Actor FORALL d:SugarLevel IF  ((a==cardioMon) OR (@Employee(a)) OR (a==mapOnWeb))\n        THEN {DENY a.write[cardioMon](d) AND DENY a.update[cardioMon](d)}) \n    AND (FORALL a:Actor FORALL d:BloodPressure IF ((a==cardioMon) OR (@Employee(a)) OR (a==mapOnWeb))\n        THEN {DENY a.write[cardioMon](d) AND DENY a.update[cardioMon](d)}) \n    AND (FORALL a:Actor FORALL d:Heartbeat IF ((a==cardioMon) OR (@Employee(a)) OR (a==mapOnWeb))\n        THEN {DENY a.write[cardioMon](d) AND DENY a.update[cardioMon](d)}) \n        \n // data transfer \n // From DPPT: Kardio - Mon has a data transfer policy country where data will be transferred is Greece\n // DATA: sensitive ACTION: transfer SOURCE: cardioMon TARGET-LOCATION : germany\n\tAND (FORALL d:Sensitive FORALL a:Actor IF (@Greece(a)) THEN {PERMIT cardioMon.transfer[a](d)}) \n\tAND (FORALL d:Sensitive FORALL a:Actor IF (NOT @Greece(a)) THEN {DENY cardioMon.transfer[a](d)}) \n\t\n// data retention \n// From DPPT: The data retention period (period after which data will be deleted by CardioMon) is 6 month\n// DATA: sensitive RETENTION: 6 month PROVIDER: cardioMon\n    AND (FORALL ds:Sensitive  MUST( cardioMon.delete[cardioMon](ds) BEFORE \"6 month\"))\n \n)", "height": 57, "bgColor": "#A0A0A0", "width": 155, "stroke": 1, "color": "#1B1B1B"}, {"cssClass": "PolicyUI", "radius": 0, "y": 151, "tlabeltxt": "wearableCoPolicyFixed", "userData": {}, "x": 662, "dasharray": null, "id": "1ccc48b7-508e-8505-9c4f-e88ad24c64a1", "alpha": 1, "ports": [{"cssClass": "draw2d_InputPort", "locator": "draw2d.layout.locator.InputPortLocator", "bgColor": "#4F6870", "userData": {}, "id": "5bf4435c-32d4-e1a0-c0bb-306c8b6e0a96", "alpha": 1, "dasharray": null, "angle": 0, "type": "draw2d.InputPort", "name": "input0", "port": "draw2d.InputPort", "maxFanOut": 9007199254740991, "height": 10, "width": 10, "stroke": 1, "color": "#1B1B1B"}, {"cssClass": "draw2d_OutputPort", "locator": "draw2d.layout.locator.OutputPortLocator", "bgColor": "#4F6870", "userData": {}, "id": "8a5b855b-552a-38bc-e036-2acf3ca11ef5", "alpha": 1, "dasharray": null, "angle": 0, "type": "draw2d.OutputPort", "name": "output0", "port": "draw2d.OutputPort", "maxFanOut": 9007199254740991, "height": 10, "width": 10, "stroke": 1, "color": "#1B1B1B"}], "angle": 0, "type": "PolicyUI", "policy": "CLAUSE wearableCoPolicyFixed (  \n\t(FORALL e:Employee FORALL d:UserName (DENY e.read[cardioMon](d) AND DENY e.write[cardioMon](d) AND DENY e.update[cardioMon](d)))\n\tAND (FORALL e:Employee FORALL d:TrainingActivity (DENY e.read[cardioMon](d) AND DENY e.write[cardioMon](d) AND DENY e.update[cardioMon](d)))\n\tAND (FORALL e:Employee FORALL d:Password (DENY e.read[cardioMon](d) AND DENY e.write[cardioMon](d) AND DENY e.update[cardioMon](d)))\n\tAND (FORALL e:Employee FORALL d:Height (DENY e.read[cardioMon](d) AND DENY e.write[cardioMon](d) AND DENY e.update[cardioMon](d)))\n\tAND (FORALL e:Employee FORALL d:Weight (DENY e.read[cardioMon](d) AND DENY e.write[cardioMon](d) AND DENY e.update[cardioMon](d)))\n\tAND (FORALL e:Employee FORALL d:SugarLevel (DENY e.read[cardioMon](d) AND DENY e.write[cardioMon](d) AND DENY e.update[cardioMon](d)))\n\tAND (FORALL e:Employee FORALL d:BloodPressure (DENY e.read[cardioMon](d) AND DENY e.write[cardioMon](d) AND DENY e.update[cardioMon](d)))\n\tAND (FORALL e:Employee FORALL d:Heartbeat (DENY e.read[cardioMon](d) AND DENY e.write[cardioMon](d) AND DENY e.update[cardioMon](d)))\n\tAND (FORALL e:Employee FORALL d:UserId (PERMIT e.read[cardioMon](d) AND DENY e.write[cardioMon](d) AND DENY e.update[cardioMon](d)))\n\tAND (FORALL e:Employee FORALL d:DisplayName (PERMIT e.read[cardioMon](d) AND DENY e.write[cardioMon](d) AND DENY e.update[cardioMon](d)))\n\tAND (FORALL e:Employee FORALL d:Gender (PERMIT e.read[cardioMon](d) AND DENY e.write[cardioMon](d) AND DENY e.update[cardioMon](d)))\n\tAND (FORALL e:Employee FORALL d:Age (PERMIT e.read[cardioMon](d) AND DENY e.write[cardioMon](d) AND DENY e.update[cardioMon](d)))\n    AND (FORALL e:Employee FORALL d:Country (PERMIT e.read[cardioMon](d) AND DENY e.write[cardioMon](d) AND DENY e.update[cardioMon](d)))\n\n// data retention \n// From DPPT: WearableCo expects a data retention period of 3 months\n// DATA: sensitive PROVIDER: cardioMon RETENTION: 3 months \n  AND  (FORALL ds:Sensitive MUST(cardioMon.delete[cardioMon](ds) BEFORE \"7 month\"))  \n  \n// data transfer \n// From DPPT: Wearable Co defines Germany as a Location where data can be transferred\n// DATA: sensitive ACTION: transfer SOURCE: cardioMon TARGET-LOCATION : germany\n\tAND  (FORALL d:Sensitive FORALL a:Actor IF (@Greece(a)) THEN {PERMIT cardioMon.transfer[a](d)}) \n \n)", "height": 57, "bgColor": "#A0A0A0", "width": 150, "stroke": 1, "color": "#1B1B1B"}, {"bgColor": "none", "userData": {}, "outlineStroke": 0, "alpha": 1, "dasharray": null, "outlineColor": "none", "type": "ImportUI", "fontSize": 12, "text": "demos/DEMO_AB/DEMO_5/locations.aal", "fontColor": "#080808", "width": 171, "x": 541, "cssClass": "ImportUI", "radius": 0, "y": 324, "fontFamily": null, "id": "d64d3ac1-3fe3-95b4-9ceb-d82942c9e3d6", "angle": 0, "ports": [], "height": 25, "stroke": 1, "color": "#1B1B1B"}, {"bgColor": "none", "userData": {}, "outlineStroke": 0, "alpha": 1, "dasharray": null, "outlineColor": "none", "type": "ImportUI", "fontSize": 12, "text": "demos/DEMO_AB/DEMO_5/wtypes.aal", "fontColor": "#080808", "width": 159, "x": 544, "cssClass": "ImportUI", "radius": 0, "y": 376, "fontFamily": null, "id": "b1912403-7c24-3960-0967-440b41500318", "angle": 0, "ports": [], "height": 25, "stroke": 1, "color": "#1B1B1B"}, {"cssClass": "draw2d_Connection", "radius": 20, "type": "draw2d.Connection", "routingMetaData": {"routedByUserInteraction": false, "toDir": 3, "fromDir": 1}, "outlineStroke": 0, "id": "be184b20-3c0c-29d3-bb2f-53b31c690225", "vertex": [{"x": 216, "y": 78.5}, {"x": 294.5, "y": 78.5}, {"x": 294.5, "y": 184}, {"x": 373, "y": 184}], "alpha": 1, "policy": "draw2d.policy.line.OrthogonalSelectionFeedbackPolicy", "angle": 0, "userData": {}, "outlineColor": "#303030", "target": {"port": "input0", "node": "f97f1af9-f1a2-2707-f17c-b6049027ccd5"}, "source": {"port": "output0", "node": "869596b2-9182-3b51-cad6-bc45fb73b135"}, "stroke": 4, "color": "#00A8F0", "router": "draw2d.layout.connection.InteractiveManhattanConnectionRouter"}, {"cssClass": "draw2d_Connection", "radius": 20, "type": "draw2d.Connection", "routingMetaData": {"routedByUserInteraction": false, "toDir": 3, "fromDir": 1}, "outlineStroke": 0, "id": "ba5408b7-fbe5-dccb-a686-6e52010cd982", "vertex": [{"x": 216, "y": 293}, {"x": 294.5, "y": 293}, {"x": 294.5, "y": 184}, {"x": 373, "y": 184}], "alpha": 1, "policy": "draw2d.policy.line.OrthogonalSelectionFeedbackPolicy", "angle": 0, "userData": {}, "outlineColor": "#303030", "target": {"port": "input0", "node": "f97f1af9-f1a2-2707-f17c-b6049027ccd5"}, "source": {"port": "output0", "node": "3e9df7ac-8521-7e51-916e-b40499ba1b72"}, "stroke": 4, "color": "#00A8F0", "router": "draw2d.layout.connection.InteractiveManhattanConnectionRouter"}, {"cssClass": "draw2d_Connection", "radius": 20, "type": "draw2d.Connection", "routingMetaData": {"routedByUserInteraction": true, "toDir": 3, "fromDir": 1}, "outlineStroke": 0, "id": "d6d5b673-1284-3eea-09a4-0dc758291b68", "vertex": [{"x": 216, "y": 78.5}, {"x": 556, "y": 78.5}, {"x": 556, "y": 179.5}, {"x": 662, "y": 179.5}], "alpha": 1, "policy": "draw2d.policy.line.OrthogonalSelectionFeedbackPolicy", "angle": 0, "userData": {}, "outlineColor": "#303030", "target": {"port": "input0", "node": "1ccc48b7-508e-8505-9c4f-e88ad24c64a1"}, "source": {"port": "output0", "node": "869596b2-9182-3b51-cad6-bc45fb73b135"}, "stroke": 4, "color": "#00A8F0", "router": "draw2d.layout.connection.InteractiveManhattanConnectionRouter"}, {"cssClass": "draw2d_Connection", "radius": 20, "type": "draw2d.Connection", "routingMetaData": {"routedByUserInteraction": true, "toDir": 3, "fromDir": 1}, "outlineStroke": 0, "id": "2310a347-9c27-efad-754b-2a2aba514067", "vertex": [{"x": 216, "y": 293}, {"x": 553.5, "y": 293}, {"x": 553.5, "y": 179.5}, {"x": 662, "y": 179.5}], "alpha": 1, "policy": "draw2d.policy.line.OrthogonalSelectionFeedbackPolicy", "angle": 0, "userData": {}, "outlineColor": "#303030", "target": {"port": "input0", "node": "1ccc48b7-508e-8505-9c4f-e88ad24c64a1"}, "source": {"port": "output0", "node": "3e9df7ac-8521-7e51-916e-b40499ba1b72"}, "stroke": 4, "color": "#00A8F0", "router": "draw2d.layout.connection.InteractiveManhattanConnectionRouter"}]