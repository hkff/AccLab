// 29/9/2015
// ONLY KardioMonPolicy

// Loading types & macros libraries
LOAD "core.types"
LOAD "core.macros"

/***************************
 *       Declarations
 ****************************/
// Actors
AGENT cardioMon TYPES(DataProcessor ) REQUIRED() PROVIDED(read write update delete )
AGENT wearableCo TYPES(DataController ) REQUIRED(read write update delete ) PROVIDED()
AGENT customer TYPES(DataSubject ) REQUIRED() PROVIDED()
AGENT mapOnWeb TYPES(DataProcessor ) REQUIRED() PROVIDED()
AGENT dataSpacer TYPES(DataProcessor ) REQUIRED() PROVIDED()
AGENT auditor TYPES(Auditor) REQUIRED() PROVIDED()

// Services
SERVICE read
SERVICE write
SERVICE update
SERVICE delete
SERVICE notify
SERVICE transfer

LOAD "demos.DEMO_AB.DEMO_5.wtypes"
LOAD "demos.DEMO_AB.DEMO_5.locations"

/***************************
 *       Clauses
 ****************************/
 // result from the translation of (some) privacy information 
 // with some grouping and simplification from the security expert
CLAUSE cardioMonPolicy (  
  // Customer
  (FORALL c:Customer FORALL d:data IF (d.subject==c)
        THEN {PERMIT c.read[cardioMon](d) AND PERMIT c.write[cardioMon](d) AND PERMIT c.update[cardioMon](d) AND PERMIT c.delete[cardioMon](d)})
  // add no delete for any data any actor not a Customer (not consistent)
  AND (FORALL a:Actor FORALL d:data IF (NOT @Customer(a)) THEN {DENY a.delete[cardioMon](d)})
 // lines 1,2,7,8,12
    AND (FORALL a:Actor FORALL d:UserName IF  ((a==cardioMon) OR @Employee(a) OR (a==mapOnWeb))
        THEN {DENY a.read[cardioMon](d) AND DENY a.write[cardioMon](d) AND DENY a.update[cardioMon](d)}) 
    AND (FORALL a:Actor FORALL d:Password IF ((a==cardioMon) OR (@Employee(a)) OR (a==mapOnWeb))
        THEN {DENY a.read[cardioMon](d) AND DENY a.write[cardioMon](d) AND DENY a.update[cardioMon](d)}) 
    AND (FORALL a:Actor FORALL d:TrainingActivity IF ((a==cardioMon) OR (@Employee(a)) OR (a==mapOnWeb))
        THEN {DENY a.read[cardioMon](d) AND DENY a.write[cardioMon](d) AND DENY a.update[cardioMon](d)}) 
    AND (FORALL a:Actor FORALL d:Height IF ((a==cardioMon) OR (@Employee(a)) OR (a==mapOnWeb))
        THEN {DENY a.read[cardioMon](d) AND DENY a.write[cardioMon](d) AND DENY a.update[cardioMon](d)}) 
    AND (FORALL a:Actor FORALL d:Weight IF ((a==cardioMon) OR (@Employee(a)) OR (a==mapOnWeb))
        THEN {DENY a.read[cardioMon](d) AND DENY a.write[cardioMon](d) AND DENY a.update[cardioMon](d)}) 
  AND 
 // lines 3,4,5
     (FORALL d:UserId ((FORALL e:Employee PERMIT e.read[cardioMon](d)) AND DENY mapOnWeb.read[cardioMon](d)) AND PERMIT cardioMon.read[cardioMon](d))
    AND (FORALL d:DisplayName (PERMIT cardioMon.read[cardioMon](d) AND (FORALL e:Employee PERMIT e.read[cardioMon](d)) AND DENY mapOnWeb.read[cardioMon](d)))
    AND (FORALL d:Gender  (PERMIT cardioMon.read[cardioMon](d) AND (FORALL e:Employee PERMIT e.read[cardioMon](d)) AND DENY mapOnWeb.read[cardioMon](d)))
    AND (FORALL a:Actor FORALL d:UserId IF  ((a==cardioMon) OR (@Employee(a)) OR (a==mapOnWeb))
        THEN {DENY a.write[cardioMon](d) AND DENY a.update[cardioMon](d)}) 
    AND (FORALL a:Actor FORALL d:DisplayName IF ((a==cardioMon) OR (@Employee(a)) OR (a==mapOnWeb))
        THEN {DENY a.write[cardioMon](d) AND DENY a.update[cardioMon](d)}) 
    AND (FORALL a:Actor FORALL d:Gender IF ((a==cardioMon) OR (@Employee(a)) OR (a==mapOnWeb))
        THEN {DENY a.write[cardioMon](d) AND DENY a.update[cardioMon](d)}) 
  AND
 // lines 6,13 (some access control rights)
     (FORALL a:Actor FORALL d:UserName IF  ((a==cardioMon) OR (@Employee(a)) OR (a==mapOnWeb))
        THEN {PERMIT a.read[cardioMon](d) AND DENY a.write[cardioMon](d) AND DENY a.update[cardioMon](d)})
    AND (FORALL a:Actor FORALL d:Country IF ((a==cardioMon) OR (@Employee(a)) OR (a==mapOnWeb))
        THEN {PERMIT a.read[cardioMon](d) AND DENY a.write[cardioMon](d) AND DENY a.update[cardioMon](d)}) 
  AND
 // lines 9,10,11 
      (FORALL d:SugarLevel (DENY cardioMon.read[cardioMon](d) AND (FORALL e:Employee DENY e.read[cardioMon](d)) AND PERMIT mapOnWeb.read[cardioMon](d)))
    AND (FORALL d:BloodPressure (DENY cardioMon.read[cardioMon](d) AND (FORALL e:Employee DENY e.read[cardioMon](d)) AND PERMIT mapOnWeb.read[cardioMon](d)))
    AND (FORALL d:Heartbeat (DENY cardioMon.read[cardioMon](d) AND (FORALL e:Employee DENY e.read[cardioMon](d)) AND PERMIT mapOnWeb.read[cardioMon](d)))
    AND (FORALL a:Actor FORALL d:SugarLevel IF  ((a==cardioMon) OR (@Employee(a)) OR (a==mapOnWeb))
        THEN {DENY a.write[cardioMon](d) AND DENY a.update[cardioMon](d)}) 
    AND (FORALL a:Actor FORALL d:BloodPressure IF ((a==cardioMon) OR (@Employee(a)) OR (a==mapOnWeb))
        THEN {DENY a.write[cardioMon](d) AND DENY a.update[cardioMon](d)}) 
    AND (FORALL a:Actor FORALL d:Heartbeat IF ((a==cardioMon) OR (@Employee(a)) OR (a==mapOnWeb))
        THEN {DENY a.write[cardioMon](d) AND DENY a.update[cardioMon](d)}) 

	
// data retention 
// From DPPT: The data retention period (period after which data will be deleted by CardioMon) is 6 months
// DATA: sensitive RETENTION: 6 months PROVIDER: cardioMon
    AND (FORALL ds:Sensitive MUST( cardioMon.delete[cardioMon](ds) BEFORE "6 month"))
    
    
    
    
    
    
    
    
    
    
    
    
     // fill audit expression 
//	AUDITING (ALWAYS (auditor.audit[cardioMon](wearableCo)))
    // fill rectification expression
//	IF_VIOLATED_THEN (FORALL c:Customer auditor.notify[c](dataBreach))
)

// ------------------------------
// TESTING
//CALL wsat_ue("cardioMonPolicy")
//---------------------------

//CALL sat_ue("cardioMonPolicy")

//CALL conflict("cardioMonPolicy") 
// 30 s 


//
// CALL econflict("cardioMonPolicy" "10") 
// cela fait nqq !!!!!

//CALL conflict("cardioMonPolicy" "30") 
// 1 -> nothing
// 2 -> vu at line 0
// 3 -> idem 2s
// 4 -> 2.4s
// 5 -> 2.6s
// 6 -> 3s
// 10 -> 10 s 2lines cette fois
// 2
// 30 -> OK j'ai les deux en 34s

// --------------- FIRST STEP
// 1) present declarations ...
// 2) show line 6 and comment
// 3) template 
// CALL sat_ue("cardioMonPolicy") // 
// 4) discuss conflict detection
// CALL conflict("cardioMonPolicy") // OK mais plus les lignes !!!
// Age <-> UserName line 13 fix the problem
// and recheck satisfiability

// 5) data retention 
// 6) checking it 



  // Initial specification NEVER allowed to delete
//    AND (FORALL d:data DENY cardioMon.delete[cardioMon](d))
 

