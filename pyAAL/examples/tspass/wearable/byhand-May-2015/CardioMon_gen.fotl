begin_problem(TranslatedInput).
list_of_descriptions.
name({*Translated Input*}).
author({**}).
status(unknown).
description({**}).
end_of_list.

list_of_symbols.
functions[(CardioMon,0)].
predicates[(Pdelete,2),(Pread,2),(Pupdate,2),(Pwrite,2),(age,1),(blood,1),(country,1),(customer,1),(data,1),(delete,2),(display,1),(gender,1),(heart,1),(height,1),(password,1),(public,1),(read,2),(sensitive,1),(subject,2),(sugarlevel,1),(training,1),(update,2),(userid,1),(username,1),(weight,1),(write,2)].
end_of_list.

list_of_formulae(axioms).
formula(always(and(forall([_x],and(equiv(data(_x),or(public(_x),sensitive(_x))),and(equiv(public(_x),or(display(_x),or(gender(_x),country(_x)))),equiv(sensitive(_x),or(username(_x),or(age(_x),or(sugarlevel(_x),or(password(_x),or(weight(_x),or(height(_x),or(userid(_x),or(blood(_x),or(heart(_x),training(_x)))))))))))))),and(and(forall([_x],forall([_y],implies(read(_x,_y),Pread(_x,_y)))),and(forall([_x],forall([_y],implies(write(_x,_y),Pwrite(_x,_y)))),and(forall([_x],forall([_y],implies(update(_x,_y),Pupdate(_x,_y)))),forall([_x],forall([_y],implies(delete(_x,_y),Pdelete(_x,_y))))))),and(forall([_x],forall([_y],implies(and(customer(_y),and(username(_x),subject(_x,_y))),and(not(Pread(CardioMon,_x)),and(not(Pwrite(CardioMon,_x)),and(not(Pdelete(CardioMon,_x)),not(Pupdate(CardioMon,_x)))))))),and(forall([_x],forall([_y],implies(and(customer(_y),and(password(_x),subject(_x,_y))),and(not(Pread(CardioMon,_x)),and(not(Pwrite(CardioMon,_x)),and(not(Pdelete(CardioMon,_x)),not(Pupdate(CardioMon,_x)))))))),and(forall([_x],forall([_y],implies(and(customer(_y),and(userid(_x),subject(_x,_y))),and(Pread(CardioMon,_x),and(not(Pwrite(CardioMon,_x)),and(not(Pdelete(CardioMon,_x)),not(Pupdate(CardioMon,_x)))))))),and(forall([_x],forall([_y],implies(and(customer(_y),and(display(_x),subject(_x,_y))),and(Pread(CardioMon,_x),and(not(Pwrite(CardioMon,_x)),and(not(Pdelete(CardioMon,_x)),not(Pupdate(CardioMon,_x)))))))),and(forall([_x],forall([_y],implies(and(customer(_y),and(gender(_x),subject(_x,_y))),and(Pread(CardioMon,_x),and(not(Pwrite(CardioMon,_x)),and(not(Pdelete(CardioMon,_x)),not(Pupdate(CardioMon,_x)))))))),and(forall([_x],forall([_y],implies(and(customer(_y),and(age(_x),subject(_x,_y))),and(Pread(CardioMon,_x),and(not(Pwrite(CardioMon,_x)),and(not(Pdelete(CardioMon,_x)),not(Pupdate(CardioMon,_x)))))))),and(forall([_x],forall([_y],implies(and(customer(_y),and(height(_x),subject(_x,_y))),and(not(Pread(CardioMon,_x)),and(not(Pwrite(CardioMon,_x)),and(not(Pdelete(CardioMon,_x)),not(Pupdate(CardioMon,_x)))))))),and(forall([_x],forall([_y],implies(and(customer(_y),and(weight(_x),subject(_x,_y))),and(not(Pread(CardioMon,_x)),and(not(Pwrite(CardioMon,_x)),and(not(Pdelete(CardioMon,_x)),not(Pupdate(CardioMon,_x)))))))),and(forall([_x],forall([_y],implies(and(customer(_y),and(sugarlevel(_x),subject(_x,_y))),and(not(Pread(CardioMon,_x)),and(not(Pwrite(CardioMon,_x)),and(not(Pdelete(CardioMon,_x)),not(Pupdate(CardioMon,_x)))))))),and(forall([_x],forall([_y],implies(and(customer(_y),and(blood(_x),subject(_x,_y))),and(not(Pread(CardioMon,_x)),and(not(Pwrite(CardioMon,_x)),and(not(Pdelete(CardioMon,_x)),not(Pupdate(CardioMon,_x)))))))),and(forall([_x],forall([_y],implies(and(customer(_y),and(heart(_x),subject(_x,_y))),and(not(Pread(CardioMon,_x)),and(not(Pwrite(CardioMon,_x)),and(not(Pdelete(CardioMon,_x)),not(Pupdate(CardioMon,_x)))))))),and(forall([_x],forall([_y],implies(and(customer(_y),and(training(_x),subject(_x,_y))),and(not(Pread(CardioMon,_x)),and(not(Pwrite(CardioMon,_x)),and(not(Pdelete(CardioMon,_x)),not(Pupdate(CardioMon,_x)))))))),forall([_x],forall([_y],implies(and(customer(_y),and(country(_x),subject(_x,_y))),and(Pread(CardioMon,_x),and(not(Pwrite(CardioMon,_x)),and(not(Pdelete(CardioMon,_x)),not(Pupdate(CardioMon,_x)))))))))))))))))))))))).
end_of_list.

end_problem.
